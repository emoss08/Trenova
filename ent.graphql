directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
type AccountingControl implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  recThreshold: Int!
  recThresholdAction: AccountingControlRecThresholdAction!
  autoCreateJournalEntries: Boolean!
  restrictManualJournalEntries: Boolean!
  requireJournalEntryApproval: Boolean!
  enableRecNotifications: Boolean!
  haltOnPendingRec: Boolean!
  criticalProcesses: String
  defaultRevAccountID: ID
  defaultExpAccountID: ID
  organization: Organization!
  businessUnit: BusinessUnit!
  defaultRevAccount: GeneralLedgerAccount
  defaultExpAccount: GeneralLedgerAccount
}
"""
AccountingControlRecThresholdAction is enum for the field rec_threshold_action
"""
enum AccountingControlRecThresholdAction @goModel(model: "github.com/emoss08/trenova/ent/accountingcontrol.RecThresholdAction") {
  Halt
  Warn
}
type BillingControl implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  removeBillingHistory: Boolean!
  autoBillShipment: Boolean!
  autoMarkReadyToBill: Boolean!
  validateCustomerRates: Boolean!
  autoBillCriteria: BillingControlAutoBillCriteria!
  shipmentTransferCriteria: BillingControlShipmentTransferCriteria!
  organization: Organization!
  businessUnit: BusinessUnit!
}
"""
BillingControlAutoBillCriteria is enum for the field auto_bill_criteria
"""
enum BillingControlAutoBillCriteria @goModel(model: "github.com/emoss08/trenova/ent/billingcontrol.AutoBillCriteria") {
  Delivered
  TransferredToBilling
  MarkedReadyToBill
}
"""
BillingControlShipmentTransferCriteria is enum for the field shipment_transfer_criteria
"""
enum BillingControlShipmentTransferCriteria @goModel(model: "github.com/emoss08/trenova/ent/billingcontrol.ShipmentTransferCriteria") {
  ReadyAndCompleted
  Completed
  ReadyToBill
}
type BusinessUnit implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  status: BusinessUnitStatus!
  name: String!
  entityKey: String!
  phoneNumber: String!
  address: String
  city: String
  state: String
  country: String
  postalCode: String
  taxID: String
  subscriptionPlan: String
  description: String
  legalName: String
  contactName: String
  contactEmail: String
  paidUntil: Time
  settings: Map
  freeTrial: Boolean!
  parentID: ID
  prev: BusinessUnit
  next: BusinessUnit
  organizations: [Organization!]
}
"""
BusinessUnitStatus is enum for the field status
"""
enum BusinessUnitStatus @goModel(model: "github.com/emoss08/trenova/ent/businessunit.Status") {
  A
  I
}
type Commodity implements Node {
  id: ID!
  businessUnitID: ID!
  organizationID: ID!
  createdAt: Time!
  updatedAt: Time!
  status: CommodityStatus!
  name: String!
  isHazmat: Boolean!
  unitOfMeasure: CommodityUnitOfMeasure
  minTemp: Float
  maxTemp: Float
  setPointTemp: Float
  description: String
  businessUnit: BusinessUnit!
  organization: Organization!
  hazardousMaterial: HazardousMaterial!
}
"""
CommodityStatus is enum for the field status
"""
enum CommodityStatus @goModel(model: "github.com/emoss08/trenova/ent/commodity.Status") {
  A
  I
}
"""
CommodityUnitOfMeasure is enum for the field unit_of_measure
"""
enum CommodityUnitOfMeasure @goModel(model: "github.com/emoss08/trenova/ent/commodity.UnitOfMeasure") {
  P
  T
  D
  C
  A
  B
  O
  L
  I
  S
}
"""
CreateAccountingControlInput is used for create AccountingControl object.
Input was generated by ent.
"""
input CreateAccountingControlInput {
  createdAt: Time
  updatedAt: Time
  recThreshold: Int
  recThresholdAction: AccountingControlRecThresholdAction
  autoCreateJournalEntries: Boolean
  restrictManualJournalEntries: Boolean
  requireJournalEntryApproval: Boolean
  enableRecNotifications: Boolean
  haltOnPendingRec: Boolean
  criticalProcesses: String
  organizationID: ID!
  businessUnitID: ID!
  defaultRevAccountID: ID
  defaultExpAccountID: ID
}
"""
CreateBusinessUnitInput is used for create BusinessUnit object.
Input was generated by ent.
"""
input CreateBusinessUnitInput {
  createdAt: Time
  updatedAt: Time
  status: BusinessUnitStatus
  name: String!
  entityKey: String!
  phoneNumber: String!
  address: String
  city: String
  state: String
  country: String
  postalCode: String
  taxID: String
  subscriptionPlan: String
  description: String
  legalName: String
  contactName: String
  contactEmail: String
  paidUntil: Time
  settings: Map
  freeTrial: Boolean
  prevID: ID
  nextID: ID
  organizationIDs: [ID!]
}
"""
CreateCommodityInput is used for create Commodity object.
Input was generated by ent.
"""
input CreateCommodityInput {
  createdAt: Time
  updatedAt: Time
  status: CommodityStatus
  name: String!
  isHazmat: Boolean
  unitOfMeasure: CommodityUnitOfMeasure
  minTemp: Float
  maxTemp: Float
  setPointTemp: Float
  description: String
  businessUnitID: ID!
  organizationID: ID!
  hazardousMaterialID: ID!
}
"""
CreateDispatchControlInput is used for create DispatchControl object.
Input was generated by ent.
"""
input CreateDispatchControlInput {
  createdAt: Time
  updatedAt: Time
  recordServiceIncident: DispatchControlRecordServiceIncident
  deadheadTarget: Float
  maxShipmentWeightLimit: Int
  gracePeriod: Int
  enforceWorkerAssign: Boolean
  trailerContinuity: Boolean
  dupeTrailerCheck: Boolean
  maintenanceCompliance: Boolean
  regulatoryCheck: Boolean
  prevShipmentOnHold: Boolean
  workerTimeAwayRestriction: Boolean
  tractorWorkerFleetConstraint: Boolean
  organizationID: ID!
  businessUnitID: ID!
}
"""
CreateFeasibilityToolControlInput is used for create FeasibilityToolControl object.
Input was generated by ent.
"""
input CreateFeasibilityToolControlInput {
  createdAt: Time
  updatedAt: Time
  otpOperator: FeasibilityToolControlOtpOperator
  otpValue: Float
  mpwOperator: FeasibilityToolControlMpwOperator
  mpwValue: Float
  mpdOperator: FeasibilityToolControlMpdOperator
  mpdValue: Float
  mpgOperator: FeasibilityToolControlMpgOperator
  mpgValue: Float
  organizationID: ID!
  businessUnitID: ID!
}
"""
CreateGeneralLedgerAccountInput is used for create GeneralLedgerAccount object.
Input was generated by ent.
"""
input CreateGeneralLedgerAccountInput {
  createdAt: Time
  updatedAt: Time
  status: GeneralLedgerAccountStatus
  accountNumber: String!
  accountType: GeneralLedgerAccountAccountType!
  cashFlowType: GeneralLedgerAccountCashFlowType
  accountSubType: GeneralLedgerAccountAccountSubType
  accountClass: GeneralLedgerAccountAccountClass
  balance: Float
  interestRate: Float
  dateOpened: Time
  dateClosed: Time
  notes: String
  isTaxRelevant: Boolean
  isReconciled: Boolean
  businessUnitID: ID!
  organizationID: ID!
  tagIDs: [ID!]
}
"""
CreateHazardousMaterialInput is used for create HazardousMaterial object.
Input was generated by ent.
"""
input CreateHazardousMaterialInput {
  createdAt: Time
  updatedAt: Time
  name: String!
  hazardClass: HazardousMaterialHazardClass
  ergNumber: String
  description: String
  packingGroup: HazardousMaterialPackingGroup
  properShippingName: String
  businessUnitID: ID!
  organizationID: ID!
  commodityIDs: [ID!]
}
"""
CreateInvoiceControlInput is used for create InvoiceControl object.
Input was generated by ent.
"""
input CreateInvoiceControlInput {
  createdAt: Time
  updatedAt: Time
  invoiceNumberPrefix: String
  creditMemoNumberPrefix: String
  invoiceTerms: String
  invoiceFooter: String
  invoiceLogoURL: String
  invoiceDateFormat: InvoiceControlInvoiceDateFormat
  invoiceDueAfterDays: Int
  invoiceLogoWidth: Int
  showAmountDue: Boolean
  attachPdf: Boolean
  showInvoiceDueDate: Boolean
  organizationID: ID!
  businessUnitID: ID!
}
"""
CreateOrganizationInput is used for create Organization object.
Input was generated by ent.
"""
input CreateOrganizationInput {
  createdAt: Time
  updatedAt: Time
  name: String!
  scacCode: String!
  dotNumber: String!
  logoURL: String
  orgType: OrganizationOrgType
  timezone: OrganizationTimezone
  businessUnitID: ID!
  accountingControlID: ID
  billingControlID: ID
  dispatchControlID: ID
  feasibilityToolControlID: ID
  invoiceControlID: ID
  routeControlID: ID
  shipmentControlID: ID
}
"""
CreateRouteControlInput is used for create RouteControl object.
Input was generated by ent.
"""
input CreateRouteControlInput {
  createdAt: Time
  updatedAt: Time
  distanceMethod: RouteControlDistanceMethod
  mileageUnit: RouteControlMileageUnit
  generateRoutes: Boolean
  organizationID: ID!
  businessUnitID: ID!
}
"""
CreateShipmentControlInput is used for create ShipmentControl object.
Input was generated by ent.
"""
input CreateShipmentControlInput {
  createdAt: Time
  updatedAt: Time
  autoRateShipment: Boolean
  calculateDistance: Boolean
  enforceRevCode: Boolean
  enforceVoidedComm: Boolean
  generateRoutes: Boolean
  enforceCommodity: Boolean
  autoSequenceStops: Boolean
  autoShipmentTotal: Boolean
  enforceOriginDestination: Boolean
  checkForDuplicateBol: Boolean
  sendPlacardInfo: Boolean
  enforceHazmatSegRules: Boolean
  organizationID: ID!
  businessUnitID: ID!
}
"""
CreateTableChangeAlertInput is used for create TableChangeAlert object.
Input was generated by ent.
"""
input CreateTableChangeAlertInput {
  createdAt: Time
  updatedAt: Time
  status: TableChangeAlertStatus
  name: String!
  databaseAction: TableChangeAlertDatabaseAction!
  source: TableChangeAlertSource!
  tableName: String
  topic: String
  description: String
  customSubject: String
  functionName: String
  triggerName: String
  listenerName: String
  emailRecipients: String
  effectiveDate: Time
  expirationDate: Time
  businessUnitID: ID!
  organizationID: ID!
}
"""
CreateTagInput is used for create Tag object.
Input was generated by ent.
"""
input CreateTagInput {
  createdAt: Time
  updatedAt: Time
  name: String!
  description: String
  businessUnitID: ID!
  organizationID: ID!
}
"""
CreateUserInput is used for create User object.
Input was generated by ent.
"""
input CreateUserInput {
  createdAt: Time
  updatedAt: Time
  status: UserStatus
  name: String!
  username: String!
  password: String!
  email: String!
  dateJoined: String
  timezone: UserTimezone
  profilePicURL: String
  thumbnailURL: String
  phoneNumber: String
  isAdmin: Boolean
  isSuperAdmin: Boolean
  businessUnitID: ID!
  organizationID: ID!
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type DispatchControl implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  recordServiceIncident: DispatchControlRecordServiceIncident!
  deadheadTarget: Float!
  maxShipmentWeightLimit: Int!
  gracePeriod: Int!
  enforceWorkerAssign: Boolean!
  trailerContinuity: Boolean!
  dupeTrailerCheck: Boolean!
  maintenanceCompliance: Boolean!
  regulatoryCheck: Boolean!
  prevShipmentOnHold: Boolean!
  workerTimeAwayRestriction: Boolean!
  tractorWorkerFleetConstraint: Boolean!
  organization: Organization!
  businessUnit: BusinessUnit!
}
"""
DispatchControlRecordServiceIncident is enum for the field record_service_incident
"""
enum DispatchControlRecordServiceIncident @goModel(model: "github.com/emoss08/trenova/ent/dispatchcontrol.RecordServiceIncident") {
  Never
  Pickup
  Delivery
  PickupAndDelivery
  AllExceptShipper
}
type FeasibilityToolControl implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  otpOperator: FeasibilityToolControlOtpOperator!
  otpValue: Float!
  mpwOperator: FeasibilityToolControlMpwOperator!
  mpwValue: Float!
  mpdOperator: FeasibilityToolControlMpdOperator!
  mpdValue: Float!
  mpgOperator: FeasibilityToolControlMpgOperator!
  mpgValue: Float!
  organization: Organization!
  businessUnit: BusinessUnit!
}
"""
FeasibilityToolControlMpdOperator is enum for the field mpd_operator
"""
enum FeasibilityToolControlMpdOperator @goModel(model: "github.com/emoss08/trenova/ent/feasibilitytoolcontrol.MpdOperator") {
  Eq
  Ne
  Gt
  Gte
  Lt
  Lte
}
"""
FeasibilityToolControlMpgOperator is enum for the field mpg_operator
"""
enum FeasibilityToolControlMpgOperator @goModel(model: "github.com/emoss08/trenova/ent/feasibilitytoolcontrol.MpgOperator") {
  Eq
  Ne
  Gt
  Gte
  Lt
  Lte
}
"""
FeasibilityToolControlMpwOperator is enum for the field mpw_operator
"""
enum FeasibilityToolControlMpwOperator @goModel(model: "github.com/emoss08/trenova/ent/feasibilitytoolcontrol.MpwOperator") {
  Eq
  Ne
  Gt
  Gte
  Lt
  Lte
}
"""
FeasibilityToolControlOtpOperator is enum for the field otp_operator
"""
enum FeasibilityToolControlOtpOperator @goModel(model: "github.com/emoss08/trenova/ent/feasibilitytoolcontrol.OtpOperator") {
  Eq
  Ne
  Gt
  Gte
  Lt
  Lte
}
type GeneralLedgerAccount implements Node {
  id: ID!
  businessUnitID: ID!
  organizationID: ID!
  createdAt: Time!
  updatedAt: Time!
  status: GeneralLedgerAccountStatus!
  accountNumber: String!
  accountType: GeneralLedgerAccountAccountType!
  cashFlowType: GeneralLedgerAccountCashFlowType
  accountSubType: GeneralLedgerAccountAccountSubType
  accountClass: GeneralLedgerAccountAccountClass
  balance: Float
  interestRate: Float
  dateOpened: Time!
  dateClosed: Time
  notes: String
  isTaxRelevant: Boolean!
  isReconciled: Boolean!
  businessUnit: BusinessUnit!
  organization: Organization!
  tags: [Tag!]
}
"""
GeneralLedgerAccountAccountClass is enum for the field account_class
"""
enum GeneralLedgerAccountAccountClass @goModel(model: "github.com/emoss08/trenova/ent/generalledgeraccount.AccountClass") {
  AccountClassificationBank
  AccountClassificationCash
  AccountClassificationAR
  AccountClassificationAP
  AccountClassificationINV
  AccountClassificationOCA
  AccountClassificationFA
}
"""
GeneralLedgerAccountAccountSubType is enum for the field account_sub_type
"""
enum GeneralLedgerAccountAccountSubType @goModel(model: "github.com/emoss08/trenova/ent/generalledgeraccount.AccountSubType") {
  AccountSubTypeCurrentAsset
  AccountSubTypeFixedAsset
  AccountSubTypeOtherAsset
  AccountSubTypeCurrentLiability
  AccountSubTypeLongTermLiability
  AccountSubTypeEquity
  AccountSubTypeRevenue
  AccountSubTypeCostOfGoodsSold
  AccountSubTypeExpense
  AccountSubTypeOtherIncome
  AccountSubTypeOtherExpense
}
"""
GeneralLedgerAccountAccountType is enum for the field account_type
"""
enum GeneralLedgerAccountAccountType @goModel(model: "github.com/emoss08/trenova/ent/generalledgeraccount.AccountType") {
  AccountTypeAsset
  AccountTypeLiability
  AccountTypeEquity
  AccountTypeRevenue
  AccountTypeExpense
}
"""
GeneralLedgerAccountCashFlowType is enum for the field cash_flow_type
"""
enum GeneralLedgerAccountCashFlowType @goModel(model: "github.com/emoss08/trenova/ent/generalledgeraccount.CashFlowType") {
  CashFlowOperating
  CashFlowInvesting
  CashFlowFinancing
}
"""
GeneralLedgerAccountStatus is enum for the field status
"""
enum GeneralLedgerAccountStatus @goModel(model: "github.com/emoss08/trenova/ent/generalledgeraccount.Status") {
  A
  I
}
type HazardousMaterial implements Node {
  id: ID!
  businessUnitID: ID!
  organizationID: ID!
  createdAt: Time!
  updatedAt: Time!
  name: String!
  hazardClass: HazardousMaterialHazardClass!
  ergNumber: String
  description: String
  packingGroup: HazardousMaterialPackingGroup
  properShippingName: String
  businessUnit: BusinessUnit!
  organization: Organization!
  commodities: [Commodity!]
}
"""
HazardousMaterialHazardClass is enum for the field hazard_class
"""
enum HazardousMaterialHazardClass @goModel(model: "github.com/emoss08/trenova/ent/hazardousmaterial.HazardClass") {
  HazardClass1And1
  HazardClass1And2
  HazardClass1And3
  HazardClass1And4
  HazardClass1And5
  HazardClass1And6
  HazardClass2And1
  HazardClass2And2
  HazardClass2And3
  HazardClass3
  HazardClass4And1
  HazardClass4And2
  HazardClass4And3
  HazardClass5And1
  HazardClass5And2
  HazardClass6And1
  HazardClass6And2
  HazardClass7
  HazardClass8
  HazardClass9
}
"""
HazardousMaterialPackingGroup is enum for the field packing_group
"""
enum HazardousMaterialPackingGroup @goModel(model: "github.com/emoss08/trenova/ent/hazardousmaterial.PackingGroup") {
  PackingGroupI
  PackingGroupII
  PackingGroupIII
}
type InvoiceControl implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  invoiceNumberPrefix: String!
  creditMemoNumberPrefix: String!
  invoiceTerms: String
  invoiceFooter: String
  invoiceLogoURL: String
  invoiceDateFormat: InvoiceControlInvoiceDateFormat!
  invoiceDueAfterDays: Int!
  invoiceLogoWidth: Int!
  showAmountDue: Boolean!
  attachPdf: Boolean!
  showInvoiceDueDate: Boolean!
  organization: Organization!
  businessUnit: BusinessUnit!
}
"""
InvoiceControlInvoiceDateFormat is enum for the field invoice_date_format
"""
enum InvoiceControlInvoiceDateFormat @goModel(model: "github.com/emoss08/trenova/ent/invoicecontrol.InvoiceDateFormat") {
  InvoiceDateFormatMDY
  InvoiceDateFormatDMY
  InvoiceDateFormatYMD
  InvoiceDateFormatYDM
}
"""
The builtin Map type
"""
scalar Map
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "github.com/emoss08/trenova/ent.Noder") {
  """
  The id of the object.
  """
  id: ID!
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """
  Specifies an ascending order for a given `orderBy` argument.
  """
  ASC
  """
  Specifies a descending order for a given `orderBy` argument.
  """
  DESC
}
type Organization implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  businessUnitID: ID!
  name: String!
  scacCode: String!
  dotNumber: String!
  logoURL: String
  orgType: OrganizationOrgType!
  timezone: OrganizationTimezone!
  businessUnit: BusinessUnit!
  accountingControl: AccountingControl
  billingControl: BillingControl
  dispatchControl: DispatchControl
  feasibilityToolControl: FeasibilityToolControl
  invoiceControl: InvoiceControl
  routeControl: RouteControl
  shipmentControl: ShipmentControl
}
"""
OrganizationOrgType is enum for the field org_type
"""
enum OrganizationOrgType @goModel(model: "github.com/emoss08/trenova/ent/organization.OrgType") {
  A
  B
  X
}
"""
OrganizationTimezone is enum for the field timezone
"""
enum OrganizationTimezone @goModel(model: "github.com/emoss08/trenova/ent/organization.Timezone") {
  AmericaLosAngeles
  AmericaDenver
  AmericaChicago
  AmericaNewYork
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: Cursor
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: Cursor
}
type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node
  """
  Lookup nodes by a list of IDs.
  """
  nodes(
    """
    The list of node IDs.
    """
    ids: [ID!]!
  ): [Node]!
  accountingControls: [AccountingControl!]!
  billingControls: [BillingControl!]!
  businessUnits: [BusinessUnit!]!
  commodities: [Commodity!]!
  dispatchControls: [DispatchControl!]!
  feasibilityToolControls: [FeasibilityToolControl!]!
  generalLedgerAccounts: [GeneralLedgerAccount!]!
  hazardousMaterials: [HazardousMaterial!]!
  invoiceControls: [InvoiceControl!]!
  organizations: [Organization!]!
  routeControls: [RouteControl!]!
  shipmentControls: [ShipmentControl!]!
  tableChangeAlerts: [TableChangeAlert!]!
  tags: [Tag!]!
  users: [User!]!
}
type RouteControl implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  distanceMethod: RouteControlDistanceMethod!
  mileageUnit: RouteControlMileageUnit!
  generateRoutes: Boolean!
  organization: Organization!
  businessUnit: BusinessUnit!
}
"""
RouteControlDistanceMethod is enum for the field distance_method
"""
enum RouteControlDistanceMethod @goModel(model: "github.com/emoss08/trenova/ent/routecontrol.DistanceMethod") {
  T
  G
}
"""
RouteControlMileageUnit is enum for the field mileage_unit
"""
enum RouteControlMileageUnit @goModel(model: "github.com/emoss08/trenova/ent/routecontrol.MileageUnit") {
  M
  I
}
type ShipmentControl implements Node {
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  autoRateShipment: Boolean!
  calculateDistance: Boolean!
  enforceRevCode: Boolean!
  enforceVoidedComm: Boolean!
  generateRoutes: Boolean!
  enforceCommodity: Boolean!
  autoSequenceStops: Boolean!
  autoShipmentTotal: Boolean!
  enforceOriginDestination: Boolean!
  checkForDuplicateBol: Boolean!
  sendPlacardInfo: Boolean!
  enforceHazmatSegRules: Boolean!
  organization: Organization!
  businessUnit: BusinessUnit!
}
type TableChangeAlert implements Node {
  id: ID!
  businessUnitID: ID!
  organizationID: ID!
  createdAt: Time!
  updatedAt: Time!
  status: TableChangeAlertStatus!
  name: String!
  databaseAction: TableChangeAlertDatabaseAction!
  source: TableChangeAlertSource!
  tableName: String
  topic: String
  description: String
  customSubject: String
  functionName: String
  triggerName: String
  listenerName: String
  emailRecipients: String
  effectiveDate: Time
  expirationDate: Time
  businessUnit: BusinessUnit!
  organization: Organization!
}
"""
TableChangeAlertDatabaseAction is enum for the field database_action
"""
enum TableChangeAlertDatabaseAction @goModel(model: "github.com/emoss08/trenova/ent/tablechangealert.DatabaseAction") {
  Insert
  Update
  Delete
  All
}
"""
TableChangeAlertSource is enum for the field source
"""
enum TableChangeAlertSource @goModel(model: "github.com/emoss08/trenova/ent/tablechangealert.Source") {
  Kafka
  Db
}
"""
TableChangeAlertStatus is enum for the field status
"""
enum TableChangeAlertStatus @goModel(model: "github.com/emoss08/trenova/ent/tablechangealert.Status") {
  A
  I
}
type Tag implements Node {
  id: ID!
  businessUnitID: ID!
  organizationID: ID!
  createdAt: Time!
  updatedAt: Time!
  name: String!
  description: String
  businessUnit: BusinessUnit!
  organization: Organization!
}
"""
The builtin Time type
"""
scalar Time
type User implements Node {
  id: ID!
  businessUnitID: ID!
  organizationID: ID!
  createdAt: Time!
  updatedAt: Time!
  status: UserStatus!
  name: String!
  username: String!
  email: String!
  dateJoined: String
  timezone: UserTimezone!
  profilePicURL: String
  thumbnailURL: String
  phoneNumber: String
  isAdmin: Boolean!
  isSuperAdmin: Boolean!
  businessUnit: BusinessUnit!
  organization: Organization!
}
"""
UserStatus is enum for the field status
"""
enum UserStatus @goModel(model: "github.com/emoss08/trenova/ent/user.Status") {
  A
  I
}
"""
UserTimezone is enum for the field timezone
"""
enum UserTimezone @goModel(model: "github.com/emoss08/trenova/ent/user.Timezone") {
  TimezoneAmericaLosAngeles
  TimezoneAmericaDenver
  TimezoneAmericaChicago
  TimezoneAmericaNewYork
}
