[tox]
skipsdist = true
envlist =
    py3

[gh-actions]
python =
    3.12: py3

[testenv:py3]
basepython = python3.12


[testenv]
usedevelop = true
setenv =
    PYTHONDONTWRITEBYTECODE=1
    DJANGO_SETTINGS_MODULE=backend.settings
    SECRET_KEY=69tgugtg%^fgJO&*&
    DB_NAME=postgres
    DB_USER=postgres
    DB_PASSWORD=postgres
    DB_HOST=localhost
    DB_PORT=5432
    DB_SSL_MODE=disable
    FIELD_ENCRYPTION_KEY=cxvoIIUnDvcCE9IkjaS_l3pvUUjngSK0eRubxEBwkRs=
    DEFAULT_REDIS_LOCATION=redis://localhost:6379/0
    SESSION_REDIS_LOCATION=redis://localhost:6379/1
    CELERY_CACHE_BACKEND_LOCATION=redis://localhost:6379/2
    CELERY_BROKER_URL=redis://localhost:6379/2
    CELERY_RESULT_BACKEND=django-db
    CELERY_BEAT_SCHEDULER=django_celery_beat.schedulers:DatabaseScheduler
    CELERY_TASK_ACKS_LATE=True
    CELERY_TASK_REJECT_ON_WORKER_LOST=True
    CELERY_WORKER_MAX_TASKS_PER_CHILD=100
    CELERY_WORKER_SEND_TASK_EVENTS=True
    CELERY_EVENT_QUEUE_EXPIRES=60
    CELERY_EVENT_QUEUE_TTL=60
    CACHEOPS_REDIS_LOCATION=redis://localhost:6379/3
    CACHE_OPS_SENTINEL=localhost
    CACHE_OPS_SENTINEL_SERVICE=mymaster
    CACHE_OPS_SENTINEL_PORT=26379
    KAFKA_BOOTSTRAP_SERVERS=localhost:9092
    KAFKA_GROUP_ID=tox_dev
    KAFKA_HOST=localhost
    KAFKA_PORT=9092
    BILLING_CLIENT_REDIS_HOST=localhost
    BILLING_CLIENT_REDIS_PORT=6379
    BILLING_CLIENT_REDIS_DB=4
    BILLING_CLIENT_REDIS_PASSWORD=hU&d7Uwh7&ONFBHzc@5s36$J
    KAFKA_BOOTSTRAP_SERVERS='localhost:9092'
    KAFKA_HOST=localhost
    KAFKA_PORT=9092
    KAFKA_GROUP_ID=Trenova
    KAFKA_THREAD_POOL_SIZE=10
    KAFKA_MAX_CONCURRENT_JOBS=100
    KAFKA_ALERT_UPDATE_TOPIC='localhost.public.table_change_alert'
    KAFKA_AUTO_COMMIT=False
    KAFKA_AUTO_COMMIT_INTERVAL_MS=50000
    KAFKA_OFFSET_RESET=latest

deps =
    -rrequirements.txt
    -rrequirements-dev.txt

allowlist_externals =
    bash

commands =
    {envpython} manage.py collectstatic --noinput

    # Create migrations folder in every directory and __init__.py files in them
    bash -c 'for d in */; do if [[ -f "$d/models.py" && ! -d "$d/migrations" ]]; then mkdir "$d/migrations" && touch "$d/migrations/__init__.py"; fi; done'

    {envpython} manage.py makemigrations
    {envpython} manage.py migrate
    {envpython} -m pytest -s --cov

[testenv:mypy]
basepython = python3.11
usedevelop = false
dep = django-stubs[compatible-mypy]
changedir = {toxinidir}
commands = mypy --config setup.cfg .
