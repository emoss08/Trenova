# Generated by Django 4.1.3 on 2022-12-04 00:03

import django.db.models.deletion
import django_extensions.db.fields
import localflavor.us.models
from django.db import migrations, models

import utils.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("worker", "0001_initial"),
        ("organization", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="EquipmentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the equipment type.",
                        max_length=50,
                        unique=True,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the equipment type.",
                        verbose_name="Description",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(class)s",
                        to="organization.organization",
                        verbose_name="Organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Equipment Type",
                "verbose_name_plural": "Equipment Types",
                "ordering": ["-name"],
            },
        ),
        migrations.CreateModel(
            name="EquipmentTypeDetail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "equipment_class",
                    utils.models.ChoiceField(
                        choices=[
                            ("undefined", "UNDEFINED"),
                            ("car", "Car"),
                            ("van", "Van"),
                            ("pickup", "Pickup"),
                            ("walk-in", "Walk-In"),
                            ("straight", "Straight Truck"),
                            ("tractor", "Tractor"),
                            ("trailer", "Trailer"),
                        ],
                        default="undefined",
                        help_text="Class of the equipment type.",
                        max_length=9,
                        verbose_name="Equipment Class",
                    ),
                ),
                (
                    "fixed_cost",
                    models.DecimalField(
                        decimal_places=4,
                        default=0.0,
                        help_text="Fixed cost of the equipment type.",
                        max_digits=10,
                        verbose_name="Fixed Cost",
                    ),
                ),
                (
                    "variable_cost",
                    models.DecimalField(
                        decimal_places=4,
                        default=0.0,
                        help_text="Variable cost of the equipment type.",
                        max_digits=10,
                        verbose_name="Variable Cost",
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        decimal_places=4,
                        default=0.0,
                        help_text="Height of the equipment type.",
                        max_digits=10,
                        verbose_name="Height (Inches)",
                    ),
                ),
                (
                    "length",
                    models.DecimalField(
                        decimal_places=4,
                        default=0.0,
                        help_text="Length of the equipment type.",
                        max_digits=10,
                        verbose_name="Length (Inches)",
                    ),
                ),
                (
                    "width",
                    models.DecimalField(
                        decimal_places=4,
                        default=0.0,
                        help_text="Width of the equipment type.",
                        max_digits=10,
                        verbose_name="Width (Inches)",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=4,
                        default=0.0,
                        help_text="Weight of the equipment type.",
                        max_digits=10,
                        verbose_name="Weight (Pounds)",
                    ),
                ),
                (
                    "idling_fuel_usage",
                    models.DecimalField(
                        decimal_places=4,
                        default=0.0,
                        help_text="Idling fuel usage of the equipment type.",
                        max_digits=10,
                        verbose_name="Idling Fuel Usage (Gallons Per Hour)",
                    ),
                ),
                (
                    "exempt_from_tolls",
                    models.BooleanField(
                        default=False,
                        help_text="Exempt from tolls of the equipment type.",
                        verbose_name="Exempt From Tolls",
                    ),
                ),
                (
                    "equipment_type",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="equipment_type_details",
                        related_query_name="equipment_type_detail",
                        to="equipment.equipmenttype",
                        verbose_name="Equipment Type",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(class)s",
                        to="organization.organization",
                        verbose_name="Organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Equipment Type Detail",
                "verbose_name_plural": "Equipment Type Details",
                "ordering": ["-equipment_type"],
            },
        ),
        migrations.CreateModel(
            name="EquipmentManufacturer",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "id",
                    models.CharField(
                        help_text="ID of the equipment manufacturer.",
                        max_length=50,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the equipment manufacturer.",
                        verbose_name="Description",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(class)s",
                        to="organization.organization",
                        verbose_name="Organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Equipment Manufacturer",
                "verbose_name_plural": "Equipment Manufacturers",
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="EquipmentMaintenancePlan",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "id",
                    models.CharField(
                        help_text="ID of the equipment maintenance plan.",
                        max_length=50,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the equipment maintenance plan.",
                        verbose_name="Description",
                    ),
                ),
                (
                    "by_distance",
                    models.BooleanField(
                        default=False,
                        help_text="Maintenance plan is by distance.",
                        verbose_name="By Distance",
                    ),
                ),
                (
                    "by_time",
                    models.BooleanField(
                        default=False,
                        help_text="Maintenance plan is by time.",
                        verbose_name="By Time",
                    ),
                ),
                (
                    "by_engine_hours",
                    models.BooleanField(
                        default=False,
                        help_text="Maintenance plan is by engine hours.",
                        verbose_name="By Engine Hours",
                    ),
                ),
                (
                    "miles",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Miles of the equipment maintenance plan.",
                        verbose_name="Miles",
                    ),
                ),
                (
                    "months",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Months of the equipment maintenance plan.",
                        verbose_name="Months",
                    ),
                ),
                (
                    "engine_hours",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Engine hours of the equipment maintenance plan.",
                        verbose_name="Engine Hours",
                    ),
                ),
                (
                    "equipment_types",
                    models.ManyToManyField(
                        related_name="maintenance_plan",
                        related_query_name="maintenance_plans",
                        to="equipment.equipmenttype",
                        verbose_name="Equipment Types",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(class)s",
                        to="organization.organization",
                        verbose_name="Organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Equipment Maintenance Plan",
                "verbose_name_plural": "Equipment Maintenance Plans",
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Equipment",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "id",
                    models.CharField(
                        help_text="ID of the equipment.",
                        max_length=50,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether the Equipment is active or not.",
                        verbose_name="Active",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the equipment.",
                        verbose_name="Description",
                    ),
                ),
                (
                    "license_plate_number",
                    models.CharField(
                        blank=True,
                        help_text="License plate number of the equipment.",
                        max_length=50,
                        verbose_name="License Plate Number",
                    ),
                ),
                (
                    "vin_number",
                    models.CharField(
                        blank=True,
                        help_text="VIN number of the equipment.",
                        max_length=17,
                        verbose_name="VIN Number",
                    ),
                ),
                (
                    "odometer",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Odometer of the equipment.",
                        verbose_name="Odometer",
                    ),
                ),
                (
                    "engine_hours",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Engine hours of the equipment.",
                        verbose_name="Engine Hours",
                    ),
                ),
                (
                    "manufactured_date",
                    models.DateField(
                        blank=True,
                        help_text="Manufactured date of the equipment.",
                        null=True,
                        verbose_name="Manufactured Date",
                    ),
                ),
                (
                    "model",
                    models.CharField(
                        blank=True,
                        help_text="Model of the equipment.",
                        max_length=50,
                        verbose_name="Model",
                    ),
                ),
                (
                    "model_year",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Model year of the equipment.",
                        null=True,
                        verbose_name="Model Year",
                    ),
                ),
                (
                    "state",
                    localflavor.us.models.USStateField(
                        blank=True,
                        help_text="State of the equipment.",
                        max_length=2,
                        null=True,
                        verbose_name="State",
                    ),
                ),
                (
                    "leased",
                    models.BooleanField(
                        default=False,
                        help_text="Leased of the equipment.",
                        verbose_name="Leased",
                    ),
                ),
                (
                    "leased_date",
                    models.DateField(
                        blank=True,
                        help_text="Leased date of the equipment.",
                        null=True,
                        verbose_name="Leased Date",
                    ),
                ),
                (
                    "hos_exempt",
                    models.BooleanField(
                        default=False,
                        help_text="HOS exempt of the equipment.",
                        verbose_name="HOS Exempt",
                    ),
                ),
                (
                    "aux_power_unit_type",
                    utils.models.ChoiceField(
                        choices=[
                            ("none", "None"),
                            ("apu", "APU"),
                            ("bunk-heater", "Bunk Heater"),
                            ("hybrid", "Hybrid"),
                        ],
                        default="none",
                        help_text="Auxiliary power unit type of the equipment.",
                        max_length=11,
                        verbose_name="Auxiliary Power Unit Type",
                    ),
                ),
                (
                    "fuel_draw_capacity",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Fuel draw capacity of the equipment.",
                        verbose_name="Fuel Draw Capacity",
                    ),
                ),
                (
                    "num_of_axles",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of axles of the equipment.",
                        verbose_name="Number of Axles",
                    ),
                ),
                (
                    "transmission_manufacturer",
                    models.CharField(
                        blank=True,
                        help_text="Transmission manufacturer of the equipment.",
                        max_length=50,
                        verbose_name="Transmission Manufacturer",
                    ),
                ),
                (
                    "transmission_type",
                    models.CharField(
                        blank=True,
                        help_text="Transmission type of the equipment.",
                        max_length=50,
                        verbose_name="Transmission Type",
                    ),
                ),
                (
                    "has_berth",
                    models.BooleanField(
                        default=False,
                        help_text="Equipment has Sleeper Berth.",
                        verbose_name="Has Berth",
                    ),
                ),
                (
                    "has_electronic_engine",
                    models.BooleanField(
                        default=False,
                        help_text="Equipment has Electronic Engine.",
                        verbose_name="Has Electronic Engine",
                    ),
                ),
                (
                    "highway_use_tax",
                    models.BooleanField(
                        default=False,
                        help_text="Equipment has Highway Use Tax.",
                        verbose_name="Highway Use Tax",
                    ),
                ),
                (
                    "owner_operated",
                    models.BooleanField(
                        default=False,
                        help_text="Equipment is Owner Operated.",
                        verbose_name="Owner Operated",
                    ),
                ),
                (
                    "ifta_qualified",
                    models.BooleanField(
                        default=False,
                        help_text="Equipment is IFTA Qualified.",
                        verbose_name="IFTA Qualified",
                    ),
                ),
                (
                    "equipment_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="equipment",
                        related_query_name="equipment",
                        to="equipment.equipmenttype",
                        verbose_name="Equipment Type",
                    ),
                ),
                (
                    "manufacturer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="equipments",
                        related_query_name="equipment",
                        to="equipment.equipmentmanufacturer",
                        verbose_name="Manufacturer",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(class)s",
                        to="organization.organization",
                        verbose_name="Organization",
                    ),
                ),
                (
                    "primary_worker",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="primary_equipment",
                        related_query_name="primary_equipment",
                        to="worker.worker",
                        verbose_name="Primary Worker",
                    ),
                ),
                (
                    "secondary_worker",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="secondary_equipment",
                        related_query_name="secondary_equipment",
                        to="worker.worker",
                        verbose_name="Secondary Worker",
                    ),
                ),
            ],
            options={
                "verbose_name": "Equipment",
                "verbose_name_plural": "Equipment",
                "ordering": ["id"],
            },
        ),
    ]
