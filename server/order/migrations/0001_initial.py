# Generated by Django 4.1.3 on 2022-12-04 00:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import order.models
import utils.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("commodities", "0001_initial"),
        ("location", "0001_initial"),
        ("equipment", "0001_initial"),
        ("accounting", "0001_initial"),
        ("dispatch", "0001_initial"),
        ("customer", "0001_initial"),
        ("organization", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("billing", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "pro_number",
                    models.CharField(
                        editable=False,
                        help_text="Pro Number of the Order",
                        max_length=10,
                        unique=True,
                        verbose_name="Pro Number",
                    ),
                ),
                (
                    "status",
                    utils.models.ChoiceField(
                        choices=[
                            ("N", "New"),
                            ("P", "In Progress"),
                            ("C", "Completed"),
                            ("H", "Hold"),
                            ("B", "Billed"),
                            ("V", "Voided"),
                        ],
                        default="N",
                        max_length=1,
                        verbose_name="Status",
                    ),
                ),
                (
                    "origin_address",
                    models.CharField(
                        blank=True,
                        help_text="Origin Address of the Order",
                        max_length=255,
                        verbose_name="Origin Address",
                    ),
                ),
                (
                    "origin_appointment",
                    models.DateTimeField(
                        help_text="The time the equipment is expected to arrive at the origin/pickup.",
                        verbose_name="Origin Appointment",
                    ),
                ),
                (
                    "destination_address",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Destination Address"
                    ),
                ),
                (
                    "destination_appointment",
                    models.DateTimeField(
                        help_text="The time the equipment is expected to arrive at the destination/drop-off.",
                        verbose_name="Destination Appointment Time",
                    ),
                ),
                (
                    "mileage",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Total Mileage",
                        max_digits=10,
                        verbose_name="Total Mileage",
                    ),
                ),
                (
                    "other_charge_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Additional Charge Amount",
                        max_digits=10,
                        verbose_name="Additional Charge Amount",
                    ),
                ),
                (
                    "freight_charge_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Freight Charge Amount",
                        max_digits=10,
                        verbose_name="Freight Charge Amount",
                    ),
                ),
                (
                    "rate_method",
                    utils.models.ChoiceField(
                        choices=[
                            ("F", "Flat Fee"),
                            ("PM", "Per Mile"),
                            ("PS", "Per Stop"),
                            ("PP", "Per Pound"),
                        ],
                        default="F",
                        help_text="Rating Method",
                        max_length=2,
                        verbose_name="Rating Method",
                    ),
                ),
                (
                    "pieces",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Total Piece Count of the Order",
                        verbose_name="Pieces",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Total Weight of the Order",
                        max_digits=10,
                        verbose_name="Weight",
                    ),
                ),
                (
                    "ready_to_bill",
                    models.BooleanField(
                        default=False,
                        help_text="Ready to Bill",
                        verbose_name="Ready to Bill",
                    ),
                ),
                (
                    "bill_date",
                    models.DateField(
                        blank=True,
                        help_text="Billed Date",
                        null=True,
                        verbose_name="Billed Date",
                    ),
                ),
                (
                    "billed",
                    models.BooleanField(
                        default=False, help_text="Billed", verbose_name="Billed"
                    ),
                ),
                (
                    "transferred_to_billing",
                    models.BooleanField(
                        default=False,
                        help_text="Transferred to Billing",
                        verbose_name="Transferred to Billing",
                    ),
                ),
                (
                    "billing_transfer_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Billing Transfer Date",
                        null=True,
                        verbose_name="Billing Transfer Date",
                    ),
                ),
                (
                    "sub_total",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Sub Total Amount",
                        max_digits=10,
                        verbose_name="Sub Total Amount",
                    ),
                ),
                (
                    "temperature_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Minimum Temperature",
                        max_digits=10,
                        null=True,
                        verbose_name="Minimum Temperature",
                    ),
                ),
                (
                    "temperature_max",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Maximum Temperature",
                        max_digits=10,
                        null=True,
                        verbose_name="Maximum Temperature",
                    ),
                ),
                (
                    "bol_number",
                    models.CharField(
                        help_text="BOL Number",
                        max_length=255,
                        verbose_name="BOL Number",
                    ),
                ),
                (
                    "consignee_ref_number",
                    models.CharField(
                        blank=True,
                        help_text="Consignee Reference Number",
                        max_length=255,
                        verbose_name="Consignee Reference Number",
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        blank=True,
                        help_text="Planning Comment",
                        max_length=100,
                        verbose_name="Comment",
                    ),
                ),
                (
                    "commodity",
                    models.ForeignKey(
                        help_text="Commodity",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders",
                        related_query_name="order",
                        to="commodities.commodity",
                        verbose_name="Commodity",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        help_text="Customer of the Order",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders",
                        related_query_name="order",
                        to="customer.customer",
                        verbose_name="Customer",
                    ),
                ),
                (
                    "destination_location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="destination_order",
                        related_query_name="destination_orders",
                        to="location.location",
                        verbose_name="Destination Location",
                    ),
                ),
                (
                    "entered_by",
                    models.ForeignKey(
                        help_text="Order entered by User",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders",
                        related_query_name="order",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "equipment_type",
                    models.ForeignKey(
                        help_text="Equipment Type",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders",
                        related_query_name="order",
                        to="equipment.equipmenttype",
                        verbose_name="Equipment Type",
                    ),
                ),
                (
                    "hazmat",
                    models.ForeignKey(
                        blank=True,
                        help_text="Hazardous Class",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders",
                        related_query_name="order",
                        to="commodities.hazardousmaterial",
                        verbose_name="Hazardous Class",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(class)s",
                        to="organization.organization",
                        verbose_name="Organization",
                    ),
                ),
                (
                    "origin_location",
                    models.ForeignKey(
                        help_text="Origin Location of the Order",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="origin_order",
                        related_query_name="origin_orders",
                        to="location.location",
                        verbose_name="Origin Location",
                    ),
                ),
                (
                    "revenue_code",
                    models.ForeignKey(
                        blank=True,
                        help_text="Revenue Code of the Order",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders",
                        related_query_name="order",
                        to="accounting.revenuecode",
                        verbose_name="Revenue Code",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order",
                "verbose_name_plural": "Orders",
                "ordering": ["-pro_number"],
            },
        ),
        migrations.CreateModel(
            name="ReasonCode",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Code of the Reason Code",
                        max_length=255,
                        unique=True,
                        verbose_name="Code",
                    ),
                ),
                (
                    "code_type",
                    utils.models.ChoiceField(
                        choices=[("VOIDED", "Voided"), ("CANCELLED", "Cancelled")],
                        help_text="Code Type of the Reason Code",
                        max_length=9,
                        verbose_name="Code Type",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="Description of the Reason Code",
                        max_length=100,
                        verbose_name="Description",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(class)s",
                        to="organization.organization",
                        verbose_name="Organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Reason Code",
                "verbose_name_plural": "Reason Codes",
                "ordering": ["code"],
            },
        ),
        migrations.CreateModel(
            name="OrderType",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Is Active"),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the Order Type",
                        max_length=255,
                        unique=True,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of the Order Type",
                        verbose_name="Description",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(class)s",
                        to="organization.organization",
                        verbose_name="Organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order Type",
                "verbose_name_plural": "Order Types",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="OrderDocumentation",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "document",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=order.models.order_documentation_upload_to,
                        verbose_name="Document",
                    ),
                ),
                (
                    "document_class",
                    models.ForeignKey(
                        help_text="Document Class",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_documentation",
                        to="billing.documentclassification",
                        verbose_name="Document Class",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_documentation",
                        to="order.order",
                        verbose_name="Order",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(class)s",
                        to="organization.organization",
                        verbose_name="Organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order Documentation",
                "verbose_name_plural": "Order Documentation",
            },
        ),
        migrations.CreateModel(
            name="OrderControl",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "auto_rate_orders",
                    models.BooleanField(
                        default=True,
                        help_text="Auto rate orders",
                        verbose_name="Auto Rate",
                    ),
                ),
                (
                    "calculate_distance",
                    models.BooleanField(
                        default=True,
                        help_text="Calculate distance for the order",
                        verbose_name="Calculate Distance",
                    ),
                ),
                (
                    "enforce_customer",
                    models.BooleanField(
                        default=False,
                        help_text="Enforce Customer to being enter when entering an order.",
                        verbose_name="Enforce Customer",
                    ),
                ),
                (
                    "enforce_rev_code",
                    models.BooleanField(
                        default=False,
                        help_text="Enforce rev code code being entered when entering an order.",
                        verbose_name="Enforce Rev Code",
                    ),
                ),
                (
                    "enforce_shipper",
                    models.BooleanField(
                        default=False,
                        help_text="Enforce shipper when putting in an order.",
                        verbose_name="Enforce Shipper",
                    ),
                ),
                (
                    "enforce_cancel_comm",
                    models.BooleanField(
                        default=False,
                        help_text="Enforce comment when cancelling an order.",
                        verbose_name="Enforce Voided Comm",
                    ),
                ),
                (
                    "generate_routes",
                    models.BooleanField(
                        default=False,
                        help_text="Automatically generate routes for order entry.",
                        verbose_name="Generate Routes",
                    ),
                ),
                (
                    "auto_pop_address",
                    models.BooleanField(
                        default=True,
                        help_text="Auto populate address from location ID when entering an order.",
                        verbose_name="Auto Populate Address",
                    ),
                ),
                (
                    "auto_sequence_stops",
                    models.BooleanField(
                        default=True,
                        help_text="Auto Sequence stops for the order and movements.",
                        verbose_name="Auto Sequence Stops",
                    ),
                ),
                (
                    "auto_order_total",
                    models.BooleanField(
                        default=True,
                        help_text="Automate the order total amount calculation.",
                        verbose_name="Auto Order Total",
                    ),
                ),
                (
                    "enforce_origin_destination",
                    models.BooleanField(
                        default=False,
                        help_text="Compare and validate that origin and destination are not the same.",
                        verbose_name="Compare Origin Destination",
                    ),
                ),
                (
                    "organization",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_control",
                        related_query_name="order_controls",
                        to="organization.organization",
                        verbose_name="Organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order Control",
                "verbose_name_plural": "Order Controls",
                "ordering": ["organization"],
            },
        ),
        migrations.CreateModel(
            name="OrderComment",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "comment",
                    models.TextField(help_text="Comment", verbose_name="Comment"),
                ),
                (
                    "comment_type",
                    models.ForeignKey(
                        help_text="Comment Type",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_comments",
                        related_query_name="order_comment",
                        to="dispatch.commenttype",
                        verbose_name="Comment Type",
                    ),
                ),
                (
                    "entered_by",
                    models.ForeignKey(
                        help_text="Entered By",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_comments",
                        related_query_name="order_comment",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Entered By",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_comments",
                        related_query_name="order_comment",
                        to="order.order",
                        verbose_name="Order",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(class)s",
                        to="organization.organization",
                        verbose_name="Organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order Comment",
                "verbose_name_plural": "Order Comments",
            },
        ),
        migrations.CreateModel(
            name="AdditionalCharge",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "charge_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Charge Amount",
                        max_digits=10,
                        null=True,
                        verbose_name="Charge Amount",
                    ),
                ),
                (
                    "unit",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Number of units to be charged",
                        verbose_name="Unit",
                    ),
                ),
                (
                    "sub_total",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Sub Total Amount",
                        max_digits=10,
                        verbose_name="Sub Total Amount",
                    ),
                ),
                (
                    "charge",
                    models.ForeignKey(
                        help_text="Charge",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="additional_charges",
                        related_query_name="additional_charge",
                        to="billing.accessorialcharge",
                        verbose_name="Charge",
                    ),
                ),
                (
                    "entered_by",
                    models.ForeignKey(
                        help_text="Entered By",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="additional_charges",
                        related_query_name="additional_charge",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Entered By",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="additional_charges",
                        related_query_name="additional_charge",
                        to="order.order",
                        verbose_name="Order",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(class)s",
                        to="organization.organization",
                        verbose_name="Organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Additional Charge",
                "verbose_name_plural": "Additional Charges",
            },
        ),
    ]
