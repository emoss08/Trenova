package domainregistry

import (
	"github.com/emoss08/trenova/internal/core/domain/accessorialcharge"
	"github.com/emoss08/trenova/internal/core/domain/accounting"
	"github.com/emoss08/trenova/internal/core/domain/ailog"
	"github.com/emoss08/trenova/internal/core/domain/audit"
	"github.com/emoss08/trenova/internal/core/domain/commodity"
	"github.com/emoss08/trenova/internal/core/domain/customer"
	"github.com/emoss08/trenova/internal/core/domain/dedicatedlane"
	"github.com/emoss08/trenova/internal/core/domain/distanceoverride"
	"github.com/emoss08/trenova/internal/core/domain/documenttype"
	"github.com/emoss08/trenova/internal/core/domain/email"
	"github.com/emoss08/trenova/internal/core/domain/equipmentmanufacturer"
	"github.com/emoss08/trenova/internal/core/domain/equipmenttype"
	"github.com/emoss08/trenova/internal/core/domain/fleetcode"
	"github.com/emoss08/trenova/internal/core/domain/formulatemplate"
	"github.com/emoss08/trenova/internal/core/domain/hazardousmaterial"
	"github.com/emoss08/trenova/internal/core/domain/hazmatsegregationrule"
	"github.com/emoss08/trenova/internal/core/domain/holdreason"
	"github.com/emoss08/trenova/internal/core/domain/location"
	"github.com/emoss08/trenova/internal/core/domain/pagefavorite"
	"github.com/emoss08/trenova/internal/core/domain/permission"
	"github.com/emoss08/trenova/internal/core/domain/servicetype"
	"github.com/emoss08/trenova/internal/core/domain/session"
	"github.com/emoss08/trenova/internal/core/domain/shipment"
	"github.com/emoss08/trenova/internal/core/domain/shipmenttype"
	"github.com/emoss08/trenova/internal/core/domain/tableconfiguration"
	"github.com/emoss08/trenova/internal/core/domain/tenant"
	"github.com/emoss08/trenova/internal/core/domain/tractor"
	"github.com/emoss08/trenova/internal/core/domain/trailer"
	"github.com/emoss08/trenova/internal/core/domain/usstate"
	"github.com/emoss08/trenova/internal/core/domain/variable"
	"github.com/emoss08/trenova/internal/core/domain/worker"
)

func RegisterEntities() []any {
	return []any{
		&usstate.UsState{},
		&tenant.BusinessUnit{},
		&tenant.Organization{},
		&permission.Policy{},
		&permission.Role{},
		&permission.RoleAssignment{},
		&tenant.OrganizationMembership{},
		&tenant.User{},
		&tenant.APIToken{},
		&tenant.ShipmentControl{},
		&tenant.DispatchControl{},
		&tenant.BillingControl{},
		&session.Session{},
		&pagefavorite.PageFavorite{},
		&holdreason.HoldReason{},
		&tableconfiguration.ConfigurationShare{},
		&tableconfiguration.Configuration{},
		&hazardousmaterial.HazardousMaterial{},
		&documenttype.DocumentType{},
		&hazmatsegregationrule.HazmatSegregationRule{},
		&location.Location{},
		&location.LocationCategory{},
		&fleetcode.FleetCode{},
		&email.EmailProfile{},
		&worker.WorkerProfile{},
		&worker.WorkerPTO{},
		&worker.Worker{},
		&equipmenttype.EquipmentType{},
		&equipmentmanufacturer.EquipmentManufacturer{},
		&servicetype.ServiceType{},
		&shipmenttype.ShipmentType{},
		&tractor.Tractor{},
		&trailer.Trailer{},
		&commodity.Commodity{},
		&ailog.AILog{},
		&customer.BillingProfileDocumentType{},
		&customer.CustomerBillingProfile{},
		&customer.CustomerEmailProfile{},
		&customer.Customer{},
		&formulatemplate.FormulaTemplate{},
		&accessorialcharge.AccessorialCharge{},
		&shipment.Stop{},
		&shipment.ShipmentMove{},
		&shipment.ShipmentHold{},
		&shipment.ShipmentCommentMention{},
		&shipment.ShipmentComment{},
		&shipment.ShipmentCommodity{},
		&shipment.Assignment{},
		&shipment.AdditionalCharge{},
		&shipment.Shipment{},
		&dedicatedlane.DedicatedLane{},
		&dedicatedlane.Suggestion{},
		&dedicatedlane.PatternConfig{},
		&distanceoverride.Override{},
		&accounting.AccountType{},
	}
}

func RegisterPermissionAwareEntities() []PermissionAware {
	return []PermissionAware{
		hazardousmaterial.NewHazardousMaterialPermission(),
		fleetcode.NewFleetCodePermission(),
		commodity.NewCommodityPermission(),
		customer.NewCustomerPermission(),
		documenttype.NewDocumentTypePermission(),
		audit.NewAuditPermission(),
		equipmentmanufacturer.NewEquipmentManufacturerPermission(),
		equipmenttype.NewEquipmentTypePermission(),
		hazmatsegregationrule.NewHazmatSegregationRulePermission(),
		holdreason.NewHoldReasonPermission(),
		location.NewLocationPermission(),
		location.NewLocationCategoryPermission(),
		servicetype.NewServiceTypePermission(),
		shipmenttype.NewShipmentTypePermission(),
		tractor.NewTractorPermission(),
		trailer.NewTrailerPermission(),
		variable.NewVariablePermission(),
		variable.NewVariableFormatPermission(),
		tenant.NewBillingControlPermission(),
		tenant.NewUserPermission(),
		tenant.NewOrganizationPermission(),
		tenant.NewShipmentControlPermission(),
		tenant.NewDataRetentionPermission(),
		email.NewEmailProfilePermission(),
		shipment.NewShipmentPermission(),
		accessorialcharge.NewAccessorialChargePermission(),
		shipment.NewShipmentCommentPermission(),
		worker.NewWorkerPermission(),
		worker.NewWorkerPTOPermission(),
		dedicatedlane.NewDedicatedLanePermission(),
		dedicatedlane.NewSuggestionPermission(),
		dedicatedlane.NewPatternConfigPermission(),
		tenant.NewDispatchControlPermission(),
		distanceoverride.NewDistanceOverridePermission(),
		accounting.NewAccountTypePermission(),
	}
}
