// Code generated by 'trenova codegen enum'. DO NOT EDIT.

package permission

// Resource represents a resource type in the permission system
type Resource string

const (
	ResourceAccessorialCharge       Resource = "accessorial_charge"
	ResourceAuditEntry              Resource = "audit_entry"
	ResourceBillingControl          Resource = "billing_control"
	ResourceCommodity               Resource = "commodity"
	ResourceCustomer                Resource = "customer"
	ResourceDataRetention           Resource = "data_retention"
	ResourceDedicatedLane           Resource = "dedicated_lane"
	ResourceDedicatedLaneSuggestion Resource = "dedicated_lane_suggestion"
	ResourceDispatchControl         Resource = "dispatch_control"
	ResourceDistanceOverride        Resource = "distance_override"
	ResourceDocumentType            Resource = "document_type"
	ResourceEmailProfile            Resource = "email_profile"
	ResourceEquipmentManufacturer   Resource = "equipment_manufacturer"
	ResourceEquipmentType           Resource = "equipment_type"
	ResourceFleetCode               Resource = "fleet_code"
	ResourceHazardousMaterial       Resource = "hazardous_material"
	ResourceHazmatSegregationRule   Resource = "hazmat_segregation_rule"
	ResourceHoldReason              Resource = "hold_reason"
	ResourceLocation                Resource = "location"
	ResourceLocationCategory        Resource = "location_category"
	ResourceOrganization            Resource = "organization"
	ResourcePatternConfig           Resource = "pattern_config"
	ResourceServiceType             Resource = "service_type"
	ResourceShipment                Resource = "shipment"
	ResourceShipmentComment         Resource = "shipment_comment"
	ResourceShipmentControl         Resource = "shipment_control"
	ResourceShipmentType            Resource = "shipment_type"
	ResourceTractor                 Resource = "tractor"
	ResourceTrailer                 Resource = "trailer"
	ResourceUser                    Resource = "user"
	ResourceVariable                Resource = "variable"
	ResourceVariableFormat          Resource = "variable_format"
	ResourceWorker                  Resource = "worker"
	ResourceWorkerPto               Resource = "worker_pto"
)

// String returns the string representation of the Resource
func (r Resource) String() string {
	return string(r)
}

// IsValid checks if the Resource value is valid
func (r Resource) IsValid() bool {
	switch r {
	case ResourceAccessorialCharge, ResourceAuditEntry, ResourceBillingControl, ResourceCommodity, ResourceCustomer, ResourceDataRetention, ResourceDedicatedLane, ResourceDedicatedLaneSuggestion, ResourceDispatchControl, ResourceDistanceOverride, ResourceDocumentType, ResourceEmailProfile, ResourceEquipmentManufacturer, ResourceEquipmentType, ResourceFleetCode, ResourceHazardousMaterial, ResourceHazmatSegregationRule, ResourceHoldReason, ResourceLocation, ResourceLocationCategory, ResourceOrganization, ResourcePatternConfig, ResourceServiceType, ResourceShipment, ResourceShipmentComment, ResourceShipmentControl, ResourceShipmentType, ResourceTractor, ResourceTrailer, ResourceUser, ResourceVariable, ResourceVariableFormat, ResourceWorker, ResourceWorkerPto:
		return true
	default:
		return false
	}
}

// AllResources returns all valid Resource values
func AllResources() []Resource {
	return []Resource{
		ResourceAccessorialCharge,
		ResourceAuditEntry,
		ResourceBillingControl,
		ResourceCommodity,
		ResourceCustomer,
		ResourceDataRetention,
		ResourceDedicatedLane,
		ResourceDedicatedLaneSuggestion,
		ResourceDispatchControl,
		ResourceDistanceOverride,
		ResourceDocumentType,
		ResourceEmailProfile,
		ResourceEquipmentManufacturer,
		ResourceEquipmentType,
		ResourceFleetCode,
		ResourceHazardousMaterial,
		ResourceHazmatSegregationRule,
		ResourceHoldReason,
		ResourceLocation,
		ResourceLocationCategory,
		ResourceOrganization,
		ResourcePatternConfig,
		ResourceServiceType,
		ResourceShipment,
		ResourceShipmentComment,
		ResourceShipmentControl,
		ResourceShipmentType,
		ResourceTractor,
		ResourceTrailer,
		ResourceUser,
		ResourceVariable,
		ResourceVariableFormat,
		ResourceWorker,
		ResourceWorkerPto,
	}
}
