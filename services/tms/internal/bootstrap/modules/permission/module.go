package permission

import (
	"github.com/emoss08/trenova/internal/core/domain/accessorialcharge"
	"github.com/emoss08/trenova/internal/core/domain/accounting"
	"github.com/emoss08/trenova/internal/core/domain/audit"
	"github.com/emoss08/trenova/internal/core/domain/commodity"
	"github.com/emoss08/trenova/internal/core/domain/customer"
	"github.com/emoss08/trenova/internal/core/domain/dedicatedlane"
	"github.com/emoss08/trenova/internal/core/domain/distanceoverride"
	"github.com/emoss08/trenova/internal/core/domain/documenttype"
	"github.com/emoss08/trenova/internal/core/domain/email"
	"github.com/emoss08/trenova/internal/core/domain/equipmentmanufacturer"
	"github.com/emoss08/trenova/internal/core/domain/equipmenttype"
	"github.com/emoss08/trenova/internal/core/domain/fleetcode"
	"github.com/emoss08/trenova/internal/core/domain/hazardousmaterial"
	"github.com/emoss08/trenova/internal/core/domain/hazmatsegregationrule"
	"github.com/emoss08/trenova/internal/core/domain/holdreason"
	"github.com/emoss08/trenova/internal/core/domain/location"
	"github.com/emoss08/trenova/internal/core/domain/servicetype"
	"github.com/emoss08/trenova/internal/core/domain/shipment"
	"github.com/emoss08/trenova/internal/core/domain/shipmenttype"
	"github.com/emoss08/trenova/internal/core/domain/tenant"
	"github.com/emoss08/trenova/internal/core/domain/tractor"
	"github.com/emoss08/trenova/internal/core/domain/trailer"
	"github.com/emoss08/trenova/internal/core/domain/variable"
	"github.com/emoss08/trenova/internal/core/domain/worker"
	"github.com/emoss08/trenova/internal/core/services/permissionservice"
	"github.com/emoss08/trenova/pkg/permissionregistry"
	"go.uber.org/fx"
)

func Options() fx.Option {
	return fx.Options(
		RegistryModule,
		Module,
	)
}

var Module = fx.Module(
	"permissionservice",
	fx.Provide(
		permissionservice.NewPolicyCompiler,
		permissionservice.NewCacheWorkerService,
		permissionservice.NewPermissionEngine,
	),
)

var RegistryModule = fx.Module("permission-registry",
	fx.Provide(permissionregistry.NewRegistry),
	fx.Provide(
		fx.Annotate(
			hazardousmaterial.NewHazardousMaterialPermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			fleetcode.NewFleetCodePermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			commodity.NewCommodityPermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			customer.NewCustomerPermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			documenttype.NewDocumentTypePermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			audit.NewAuditPermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			equipmentmanufacturer.NewEquipmentManufacturerPermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			equipmenttype.NewEquipmentTypePermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			hazmatsegregationrule.NewHazmatSegregationRulePermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			holdreason.NewHoldReasonPermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			location.NewLocationPermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			location.NewLocationCategoryPermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			servicetype.NewServiceTypePermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			shipmenttype.NewShipmentTypePermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			tractor.NewTractorPermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			trailer.NewTrailerPermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			variable.NewVariablePermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			variable.NewVariableFormatPermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			tenant.NewBillingControlPermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			tenant.NewUserPermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			tenant.NewOrganizationPermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			tenant.NewShipmentControlPermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			tenant.NewDataRetentionPermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			email.NewEmailProfilePermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			shipment.NewShipmentPermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			accessorialcharge.NewAccessorialChargePermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			worker.NewWorkerPermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			worker.NewWorkerPTOPermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			dedicatedlane.NewDedicatedLanePermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			dedicatedlane.NewSuggestionPermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			dedicatedlane.NewPatternConfigPermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			tenant.NewDispatchControlPermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			distanceoverride.NewDistanceOverridePermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
		fx.Annotate(
			accounting.NewAccountTypePermission,
			fx.ResultTags(`group:"permission_entities"`),
		),
	),
)
