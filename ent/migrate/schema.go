// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BusinessUnitsColumns holds the columns for the "business_units" table.
	BusinessUnitsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"A", "I"}, Default: "A"},
		{Name: "name", Type: field.TypeString, Size: 255},
		{Name: "entity_key", Type: field.TypeString, Size: 10},
		{Name: "phone_number", Type: field.TypeString, Size: 15},
		{Name: "address", Type: field.TypeString, Nullable: true},
		{Name: "city", Type: field.TypeString, Size: 255},
		{Name: "state", Type: field.TypeString, Size: 2},
		{Name: "country", Type: field.TypeString, Size: 2},
		{Name: "postal_code", Type: field.TypeString, Size: 10},
		{Name: "tax_id", Type: field.TypeString, Size: 20},
		{Name: "subscription_plan", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "legal_name", Type: field.TypeString},
		{Name: "contact_name", Type: field.TypeString, Nullable: true},
		{Name: "contact_email", Type: field.TypeString, Nullable: true},
		{Name: "paid_until", Type: field.TypeTime, Nullable: true},
		{Name: "settings", Type: field.TypeJSON, Nullable: true},
		{Name: "free_trial", Type: field.TypeBool, Default: false},
		{Name: "parent_id", Type: field.TypeUUID, Unique: true, Nullable: true},
	}
	// BusinessUnitsTable holds the schema information for the "business_units" table.
	BusinessUnitsTable = &schema.Table{
		Name:       "business_units",
		Columns:    BusinessUnitsColumns,
		PrimaryKey: []*schema.Column{BusinessUnitsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "business_units_business_units_parent",
				Columns:    []*schema.Column{BusinessUnitsColumns[21]},
				RefColumns: []*schema.Column{BusinessUnitsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "businessunit_name",
				Unique:  true,
				Columns: []*schema.Column{BusinessUnitsColumns[4]},
			},
			{
				Name:    "businessunit_entity_key",
				Unique:  true,
				Columns: []*schema.Column{BusinessUnitsColumns[5]},
			},
		},
	}
	// OrganizationsColumns holds the columns for the "organizations" table.
	OrganizationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// OrganizationsTable holds the schema information for the "organizations" table.
	OrganizationsTable = &schema.Table{
		Name:       "organizations",
		Columns:    OrganizationsColumns,
		PrimaryKey: []*schema.Column{OrganizationsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BusinessUnitsTable,
		OrganizationsTable,
		UsersTable,
	}
)

func init() {
	BusinessUnitsTable.ForeignKeys[0].RefTable = BusinessUnitsTable
}
