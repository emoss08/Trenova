// Code generated by ent, DO NOT EDIT.

package shipmentcontrol

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the shipmentcontrol type in the database.
	Label = "shipment_control"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldAutoRateShipment holds the string denoting the auto_rate_shipment field in the database.
	FieldAutoRateShipment = "auto_rate_shipment"
	// FieldCalculateDistance holds the string denoting the calculate_distance field in the database.
	FieldCalculateDistance = "calculate_distance"
	// FieldEnforceRevCode holds the string denoting the enforce_rev_code field in the database.
	FieldEnforceRevCode = "enforce_rev_code"
	// FieldEnforceVoidedComm holds the string denoting the enforce_voided_comm field in the database.
	FieldEnforceVoidedComm = "enforce_voided_comm"
	// FieldGenerateRoutes holds the string denoting the generate_routes field in the database.
	FieldGenerateRoutes = "generate_routes"
	// FieldEnforceCommodity holds the string denoting the enforce_commodity field in the database.
	FieldEnforceCommodity = "enforce_commodity"
	// FieldAutoSequenceStops holds the string denoting the auto_sequence_stops field in the database.
	FieldAutoSequenceStops = "auto_sequence_stops"
	// FieldAutoShipmentTotal holds the string denoting the auto_shipment_total field in the database.
	FieldAutoShipmentTotal = "auto_shipment_total"
	// FieldEnforceOriginDestination holds the string denoting the enforce_origin_destination field in the database.
	FieldEnforceOriginDestination = "enforce_origin_destination"
	// FieldCheckForDuplicateBol holds the string denoting the check_for_duplicate_bol field in the database.
	FieldCheckForDuplicateBol = "check_for_duplicate_bol"
	// FieldSendPlacardInfo holds the string denoting the send_placard_info field in the database.
	FieldSendPlacardInfo = "send_placard_info"
	// FieldEnforceHazmatSegRules holds the string denoting the enforce_hazmat_seg_rules field in the database.
	FieldEnforceHazmatSegRules = "enforce_hazmat_seg_rules"
	// EdgeOrganization holds the string denoting the organization edge name in mutations.
	EdgeOrganization = "organization"
	// EdgeBusinessUnit holds the string denoting the business_unit edge name in mutations.
	EdgeBusinessUnit = "business_unit"
	// Table holds the table name of the shipmentcontrol in the database.
	Table = "shipment_controls"
	// OrganizationTable is the table that holds the organization relation/edge.
	OrganizationTable = "shipment_controls"
	// OrganizationInverseTable is the table name for the Organization entity.
	// It exists in this package in order to avoid circular dependency with the "organization" package.
	OrganizationInverseTable = "organizations"
	// OrganizationColumn is the table column denoting the organization relation/edge.
	OrganizationColumn = "organization_id"
	// BusinessUnitTable is the table that holds the business_unit relation/edge.
	BusinessUnitTable = "shipment_controls"
	// BusinessUnitInverseTable is the table name for the BusinessUnit entity.
	// It exists in this package in order to avoid circular dependency with the "businessunit" package.
	BusinessUnitInverseTable = "business_units"
	// BusinessUnitColumn is the table column denoting the business_unit relation/edge.
	BusinessUnitColumn = "business_unit_id"
)

// Columns holds all SQL columns for shipmentcontrol fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldAutoRateShipment,
	FieldCalculateDistance,
	FieldEnforceRevCode,
	FieldEnforceVoidedComm,
	FieldGenerateRoutes,
	FieldEnforceCommodity,
	FieldAutoSequenceStops,
	FieldAutoShipmentTotal,
	FieldEnforceOriginDestination,
	FieldCheckForDuplicateBol,
	FieldSendPlacardInfo,
	FieldEnforceHazmatSegRules,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "shipment_controls"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"organization_id",
	"business_unit_id",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultAutoRateShipment holds the default value on creation for the "auto_rate_shipment" field.
	DefaultAutoRateShipment bool
	// DefaultCalculateDistance holds the default value on creation for the "calculate_distance" field.
	DefaultCalculateDistance bool
	// DefaultEnforceRevCode holds the default value on creation for the "enforce_rev_code" field.
	DefaultEnforceRevCode bool
	// DefaultEnforceVoidedComm holds the default value on creation for the "enforce_voided_comm" field.
	DefaultEnforceVoidedComm bool
	// DefaultGenerateRoutes holds the default value on creation for the "generate_routes" field.
	DefaultGenerateRoutes bool
	// DefaultEnforceCommodity holds the default value on creation for the "enforce_commodity" field.
	DefaultEnforceCommodity bool
	// DefaultAutoSequenceStops holds the default value on creation for the "auto_sequence_stops" field.
	DefaultAutoSequenceStops bool
	// DefaultAutoShipmentTotal holds the default value on creation for the "auto_shipment_total" field.
	DefaultAutoShipmentTotal bool
	// DefaultEnforceOriginDestination holds the default value on creation for the "enforce_origin_destination" field.
	DefaultEnforceOriginDestination bool
	// DefaultCheckForDuplicateBol holds the default value on creation for the "check_for_duplicate_bol" field.
	DefaultCheckForDuplicateBol bool
	// DefaultSendPlacardInfo holds the default value on creation for the "send_placard_info" field.
	DefaultSendPlacardInfo bool
	// DefaultEnforceHazmatSegRules holds the default value on creation for the "enforce_hazmat_seg_rules" field.
	DefaultEnforceHazmatSegRules bool
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// OrderOption defines the ordering options for the ShipmentControl queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByAutoRateShipment orders the results by the auto_rate_shipment field.
func ByAutoRateShipment(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAutoRateShipment, opts...).ToFunc()
}

// ByCalculateDistance orders the results by the calculate_distance field.
func ByCalculateDistance(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCalculateDistance, opts...).ToFunc()
}

// ByEnforceRevCode orders the results by the enforce_rev_code field.
func ByEnforceRevCode(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEnforceRevCode, opts...).ToFunc()
}

// ByEnforceVoidedComm orders the results by the enforce_voided_comm field.
func ByEnforceVoidedComm(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEnforceVoidedComm, opts...).ToFunc()
}

// ByGenerateRoutes orders the results by the generate_routes field.
func ByGenerateRoutes(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGenerateRoutes, opts...).ToFunc()
}

// ByEnforceCommodity orders the results by the enforce_commodity field.
func ByEnforceCommodity(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEnforceCommodity, opts...).ToFunc()
}

// ByAutoSequenceStops orders the results by the auto_sequence_stops field.
func ByAutoSequenceStops(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAutoSequenceStops, opts...).ToFunc()
}

// ByAutoShipmentTotal orders the results by the auto_shipment_total field.
func ByAutoShipmentTotal(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAutoShipmentTotal, opts...).ToFunc()
}

// ByEnforceOriginDestination orders the results by the enforce_origin_destination field.
func ByEnforceOriginDestination(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEnforceOriginDestination, opts...).ToFunc()
}

// ByCheckForDuplicateBol orders the results by the check_for_duplicate_bol field.
func ByCheckForDuplicateBol(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCheckForDuplicateBol, opts...).ToFunc()
}

// BySendPlacardInfo orders the results by the send_placard_info field.
func BySendPlacardInfo(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSendPlacardInfo, opts...).ToFunc()
}

// ByEnforceHazmatSegRules orders the results by the enforce_hazmat_seg_rules field.
func ByEnforceHazmatSegRules(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEnforceHazmatSegRules, opts...).ToFunc()
}

// ByOrganizationField orders the results by organization field.
func ByOrganizationField(field string, opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newOrganizationStep(), sql.OrderByField(field, opts...))
	}
}

// ByBusinessUnitField orders the results by business_unit field.
func ByBusinessUnitField(field string, opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newBusinessUnitStep(), sql.OrderByField(field, opts...))
	}
}
func newOrganizationStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(OrganizationInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.O2O, true, OrganizationTable, OrganizationColumn),
	)
}
func newBusinessUnitStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(BusinessUnitInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.M2O, false, BusinessUnitTable, BusinessUnitColumn),
	)
}
