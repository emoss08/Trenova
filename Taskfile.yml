version: "3"

tasks:
  run:
    cmd: go run ./cmd/api/main.go serve
  reset:
    cmds:
      - task: db-reset
      - task: redis-flushall
      - task: db-init
      - task: db-migrate
      - task: db-seed
  check:
    cmds:
      # - task: test-pretty
      # - task: lint
      - task: format
      - task: critic
      - task: security
  swag:
    cmds:
      - task: swag-fmt
      - task: swag-init
  lint:
    cmds:
      - task: ci-lint
      - task: modernize
  test:
    cmd: go test ./... -v
  test-pretty:
    cmd: |
      if ! command -v tparse &> /dev/null
      then
        echo "tparse could not be found, installing..."
        go install github.com/mfridman/tparse@latest
      fi
      set -o pipefail && go test ./... -json | tparse -all
    silent: true
  update-go-deps:
    cmd: go get -u ./... && go mod tidy
  fix:
    cmd: goimports -w ./.. && go mod tidy
  ci-lint:
    cmd: golangci-lint run --timeout 5m
  modernize:
    cmd: go run golang.org/x/tools/gopls/internal/analysis/modernize/cmd/modernize@latest -test ./...
  format:
    cmd: go fmt ./...
  format-sql:
    cmd: |
      if ! command -v pg_format &> /dev/null
      then
        echo "pg_format could not be found, please install pgFormatter..."
        echo "Visit https://github.com/darold/pgFormatter for installation instructions"
        exit 1
      fi
      find internal/infrastructure/database/postgres/migrations/ -name "*.sql" -type f -exec pg_format -i {} \;
    desc: Format all SQL files in the migrations directory using pgFormatter
  critic:
    cmd: |
      if ! command -v gocritic &> /dev/null
      then
        echo "gocritic could not be found, installing..."
        go install github.com/go-critic/go-critic/cmd/gocritic@latest
      fi
      gocritic check -enableAll -disable=sloppyReassign,unnamedResult,importShadow,paramTypeCombine,whyNoLint,commentedOutCode ./...
  security:
    cmd: gosec ./...
  tidy:
    cmd: go mod tidy
  db-reset:
    cmd: go run cmd/db/main.go db reset
  db-init:
    cmd: go run cmd/db/main.go db init
  db-migrate:
    cmd: go run cmd/db/main.go db migrate
  db-seed:
    cmd: go run cmd/db/main.go db seed
  redis-flushall:
    cmd: go run cmd/db/main.go redis flushall
  swag-init:
    cmd: swag init --parseDependency --parseInternal --parseDepth 1 -g internal/api/server/server.go
  swag-fmt:
    cmd: swag fmt
  run-workflow-server:
    cmd: cd microservices/workflow && go run main.go
