# Generated by Django 4.1.3 on 2022-11-14 15:16

import django.db.models.deletion
import django_extensions.db.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("location", "0005_alter_location_address_line_2_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("equipment", "0006_alter_equipment_model_and_more"),
        ("accounting", "0007_remove_generalledgeraccount_account_sub_type_en_and_more"),
        ("customer", "0015_customerfueltable_name_and_more"),
        ("organization", "0007_alter_depot_description_alter_depot_name_and_more"),
        ("order", "0008_delete_order"),
    ]

    operations = [
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "pro_number",
                    models.CharField(
                        editable=False,
                        help_text="Pro Number of the Order",
                        max_length=10,
                        unique=True,
                        verbose_name="Pro Number",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("N", "New"),
                            ("P", "In Progress"),
                            ("C", "Completed"),
                            ("V", "Voided"),
                        ],
                        default="N",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "origin_address",
                    models.CharField(
                        blank=True,
                        help_text="Origin Address of the Order",
                        max_length=255,
                        verbose_name="Origin Address",
                    ),
                ),
                (
                    "origin_appointment",
                    models.DateTimeField(
                        blank=True,
                        help_text="The time the equipment is expected to arrive at the origin/pickup.",
                        null=True,
                        verbose_name="Origin Appointment",
                    ),
                ),
                (
                    "destination_address",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Destination Address"
                    ),
                ),
                (
                    "destination_appointment_time",
                    models.DateTimeField(
                        help_text="The time the equipment is expected to arrive at the destination.",
                        verbose_name="Destination Appointment Time",
                    ),
                ),
                (
                    "mileage",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Total Mileage",
                        max_digits=10,
                        null=True,
                        verbose_name="Total Mileage",
                    ),
                ),
                (
                    "other_charge_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Additional Charge Amount",
                        max_digits=10,
                        null=True,
                        verbose_name="Additional Charge Amount",
                    ),
                ),
                (
                    "freight_charge_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="Freight Charge Amount",
                        max_digits=10,
                        null=True,
                        verbose_name="Freight Charge Amount",
                    ),
                ),
                (
                    "rate_method",
                    models.CharField(
                        choices=[
                            ("F", "Flat Fee"),
                            ("PM", "Per Mile"),
                            ("PS", "Per Stop"),
                            ("PP", "Per Pound"),
                        ],
                        default="F",
                        help_text="Rating Method",
                        max_length=20,
                        verbose_name="Rating Method",
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        blank=True,
                        help_text="Planning Comment",
                        max_length=100,
                        verbose_name="Comment",
                    ),
                ),
                (
                    "pieces",
                    models.PositiveIntegerField(
                        blank=True,
                        default=0,
                        help_text="Total Piece Count of the Order",
                        null=True,
                        verbose_name="Pieces",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        help_text="Total Weight of the Order",
                        max_digits=10,
                        null=True,
                        verbose_name="Weight",
                    ),
                ),
                (
                    "ready_to_bill",
                    models.BooleanField(
                        default=False,
                        help_text="Ready to Bill",
                        verbose_name="Ready to Bill",
                    ),
                ),
                (
                    "bill_date",
                    models.DateField(
                        blank=True,
                        help_text="Billed Date",
                        null=True,
                        verbose_name="Billed Date",
                    ),
                ),
                (
                    "billed",
                    models.BooleanField(
                        default=False, help_text="Billed", verbose_name="Billed"
                    ),
                ),
                (
                    "transferred_to_billing",
                    models.BooleanField(
                        default=False,
                        help_text="Transferred to Billing",
                        verbose_name="Transferred to Billing",
                    ),
                ),
                (
                    "billing_transfer_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Billing Transfer Date",
                        null=True,
                        verbose_name="Billing Transfer Date",
                    ),
                ),
                (
                    "temperature_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Minimum Temperature",
                        max_digits=10,
                        null=True,
                        verbose_name="Minimum Temperature",
                    ),
                ),
                (
                    "temperature_max",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum Temperature",
                        max_digits=10,
                        null=True,
                        verbose_name="Maximum Temperature",
                    ),
                ),
                (
                    "bol_number",
                    models.CharField(
                        blank=True,
                        help_text="BOL Number",
                        max_length=255,
                        verbose_name="BOL Number",
                    ),
                ),
                (
                    "consignee_ref_number",
                    models.CharField(
                        blank=True,
                        help_text="Consignee Reference Number",
                        max_length=255,
                        verbose_name="Consignee Reference Number",
                    ),
                ),
                (
                    "commodity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders",
                        related_query_name="order",
                        to="order.commodity",
                        verbose_name="Commodity",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        help_text="Customer of the Order",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders",
                        related_query_name="order",
                        to="customer.customer",
                        verbose_name="Customer",
                    ),
                ),
                (
                    "destination_location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="destination_order",
                        related_query_name="destination_orders",
                        to="location.location",
                        verbose_name="Destination Location",
                    ),
                ),
                (
                    "entered_by",
                    models.ForeignKey(
                        help_text="Order entered by User",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders",
                        related_query_name="order",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "equipment_type",
                    models.ForeignKey(
                        help_text="Equipment Type",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders",
                        related_query_name="order",
                        to="equipment.equipmenttype",
                        verbose_name="Equipment Type",
                    ),
                ),
                (
                    "hazmat_id",
                    models.ForeignKey(
                        blank=True,
                        help_text="Hazardous Class",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders",
                        related_query_name="order",
                        to="order.hazardousmaterial",
                        verbose_name="Hazardous Class",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(class)s",
                        to="organization.organization",
                        verbose_name="Organization",
                    ),
                ),
                (
                    "origin_location",
                    models.ForeignKey(
                        help_text="Origin Location of the Order",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="origin_order",
                        related_query_name="origin_orders",
                        to="location.location",
                        verbose_name="Origin Location",
                    ),
                ),
                (
                    "revenue_code",
                    models.ForeignKey(
                        help_text="Revenue Code of the Order",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders",
                        related_query_name="order",
                        to="accounting.revenuecode",
                        verbose_name="Revenue Code",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order",
                "verbose_name_plural": "Orders",
                "ordering": ["-pro_number"],
            },
        ),
    ]
